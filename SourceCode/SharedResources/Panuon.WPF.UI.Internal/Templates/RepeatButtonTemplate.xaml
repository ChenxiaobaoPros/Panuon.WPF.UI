<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:core="clr-namespace:Panuon.WPF;assembly=Panuon.WPF"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.RepeatButtonPendingTemplate}"
                     TargetType="RepeatButton">
        <Grid>
            <Border x:Name="BdrContainer"
                    i:VisualStateHelper.IsClickEffectPressed="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    CornerRadius="{Binding Path=(i:VisualStateHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Border x:Name="BdrContent"
                    Margin="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Padding="{TemplateBinding Padding}">
                <DockPanel x:Name="DockContainer"
                           TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <local:Spin x:Name="SprPending"
                                DockPanel.Dock="{Binding Path=(local:RepeatButtonHelper.IconPlacement), Converter={StaticResource {x:Static irs:ConverterKeys.IconPlacementToDockConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                IsSpinning="True"
                                Style="{Binding Path=(local:RepeatButtonHelper.PendingSpinStyle), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <ContentPresenter Focusable="False"
                                      RecognizesAccessKey="True"
                                      VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="Background"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickBorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SprPending"
                        Property="GlyphBrush"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="DockContainer"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="DockContainer"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickCornerRadius), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="CornerRadius"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.RepeatButtonTemplate}"
                     TargetType="RepeatButton">
        <Border x:Name="BdrContainer"
                i:VisualStateHelper.IsClickEffectPressed="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                CornerRadius="{Binding Path=(i:VisualStateHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <Border Margin="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Padding="{TemplateBinding Padding}">
                <DockPanel x:Name="DockContainer"
                           TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <i:IconPresenter x:Name="IpIcon"
                                     DockPanel.Dock="{Binding Path=(local:RepeatButtonHelper.IconPlacement), Converter={StaticResource {x:Static irs:ConverterKeys.IconPlacementToDockConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Content="{Binding Path=(local:RepeatButtonHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Margin="{Binding Path=(local:IconHelper.Margin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Width="{Binding Path=(local:IconHelper.Width), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Height="{Binding Path=(local:IconHelper.Height), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     MinWidth="{Binding Path=(local:IconHelper.MinWidth), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     MinHeight="{Binding Path=(local:IconHelper.MinHeight), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     MaxWidth="{Binding Path=(local:IconHelper.MaxWidth), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     MaxHeight="{Binding Path=(local:IconHelper.MaxHeight), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     HorizontalContentAlignment="{Binding Path=(local:IconHelper.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     VerticalContentAlignment="{Binding Path=(local:IconHelper.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Foreground="{Binding Path=(local:IconHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     FontFamily="{Binding Path=(local:IconHelper.FontFamily), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     FontSize="{Binding Path=(local:IconHelper.FontSize), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     ToolTip="{Binding Path=(local:IconHelper.ToolTip), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <i:IconPresenter.Visibility>
                            <MultiBinding Converter="{StaticResource {x:Static irs:ConverterKeys.IconVisibilityConverter}}">
                                <Binding Path="(local:RepeatButtonHelper.Icon)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="(local:IconHelper.HiddenOnNull)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </i:IconPresenter.Visibility>
                    </i:IconPresenter>
                    <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Focusable="False"
                                      RecognizesAccessKey="True" />
                </DockPanel>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickBackground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="Background"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickBorderBrush), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickBorderThickness), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickBorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickForeground), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="IpIcon"
                        Property="Foreground"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="DockContainer"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="DockContainer"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RepeatButtonHelper.ClickCornerRadius), Converter={StaticResource {x:Static rs:ConverterKeys.IsNonnullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrContainer"
                        Property="CornerRadius"
                        Value="{Binding Path=(local:RepeatButtonHelper.ClickCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
